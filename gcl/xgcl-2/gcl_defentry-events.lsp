(in-package :XLIB)
; defentry-events.lsp        Hiep Huu Nguyen                      27 Aug 92

; Copyright (c) 1994 Hiep Huu Nguyen and The University of Texas at Austin.

; See the files gnu.license and dec.copyright .

; This program is free software; you can redistribute it and/or modify
; it under the terms of the GNU General Public License as published by
; the Free Software Foundation; either version 1, or (at your option)
; any later version.

; This program is distributed in the hope that it will be useful,
; but WITHOUT ANY WARRANTY; without even the implied warranty of
; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
; GNU General Public License for more details.

; You should have received a copy of the GNU General Public License
; along with this program; if not, write to the Free Software
; Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

; Some of the files that interface to the Xlib are adapted from DEC/MIT files.
; See the file dec.copyright for details.


;;;;;; XKeyEvent funcions ;;;;;;

(defentry make-XKeyEvent () ( fixnum  "make_XKeyEvent" ))
(defentry XKeyEvent-same_screen (fixnum) ( fixnum "XKeyEvent_same_screen" ))
(defentry set-XKeyEvent-same_screen (fixnum fixnum) ( void "set_XKeyEvent_same_screen" ))
(defentry XKeyEvent-keycode (fixnum) ( fixnum "XKeyEvent_keycode" ))
(defentry set-XKeyEvent-keycode (fixnum fixnum) ( void "set_XKeyEvent_keycode" ))
(defentry XKeyEvent-state (fixnum) ( fixnum "XKeyEvent_state" ))
(defentry set-XKeyEvent-state (fixnum fixnum) ( void "set_XKeyEvent_state" ))
(defentry XKeyEvent-y_root (fixnum) ( fixnum "XKeyEvent_y_root" ))
(defentry set-XKeyEvent-y_root (fixnum fixnum) ( void "set_XKeyEvent_y_root" ))
(defentry XKeyEvent-x_root (fixnum) ( fixnum "XKeyEvent_x_root" ))
(defentry set-XKeyEvent-x_root (fixnum fixnum) ( void "set_XKeyEvent_x_root" ))
(defentry XKeyEvent-y (fixnum) ( fixnum "XKeyEvent_y" ))
(defentry set-XKeyEvent-y (fixnum fixnum) ( void "set_XKeyEvent_y" ))
(defentry XKeyEvent-x (fixnum) ( fixnum "XKeyEvent_x" ))
(defentry set-XKeyEvent-x (fixnum fixnum) ( void "set_XKeyEvent_x" ))
(defentry XKeyEvent-time (fixnum) ( fixnum "XKeyEvent_time" ))
(defentry set-XKeyEvent-time (fixnum fixnum) ( void "set_XKeyEvent_time" ))
(defentry XKeyEvent-subwindow (fixnum) ( fixnum "XKeyEvent_subwindow" ))
(defentry set-XKeyEvent-subwindow (fixnum fixnum) ( void "set_XKeyEvent_subwindow" ))
(defentry XKeyEvent-root (fixnum) ( fixnum "XKeyEvent_root" ))
(defentry set-XKeyEvent-root (fixnum fixnum) ( void "set_XKeyEvent_root" ))
(defentry XKeyEvent-window (fixnum) ( fixnum "XKeyEvent_window" ))
(defentry set-XKeyEvent-window (fixnum fixnum) ( void "set_XKeyEvent_window" ))
(defentry XKeyEvent-display (fixnum) ( fixnum "XKeyEvent_display" ))
(defentry set-XKeyEvent-display (fixnum fixnum) ( void "set_XKeyEvent_display" ))
(defentry XKeyEvent-send_event (fixnum) ( fixnum "XKeyEvent_send_event" ))
(defentry set-XKeyEvent-send_event (fixnum fixnum) ( void "set_XKeyEvent_send_event" ))
(defentry XKeyEvent-serial (fixnum) ( fixnum "XKeyEvent_serial" ))
(defentry set-XKeyEvent-serial (fixnum fixnum) ( void "set_XKeyEvent_serial" ))
(defentry XKeyEvent-type (fixnum) ( fixnum "XKeyEvent_type" ))
(defentry set-XKeyEvent-type (fixnum fixnum) ( void "set_XKeyEvent_type" ))


;;;;;; XButtonEvent funcions ;;;;;;

(defentry make-XButtonEvent () ( fixnum  "make_XButtonEvent" ))
(defentry XButtonEvent-same_screen (fixnum) ( fixnum "XButtonEvent_same_screen" ))
(defentry set-XButtonEvent-same_screen (fixnum fixnum) ( void "set_XButtonEvent_same_screen" ))
(defentry XButtonEvent-button (fixnum) ( fixnum "XButtonEvent_button" ))
(defentry set-XButtonEvent-button (fixnum fixnum) ( void "set_XButtonEvent_button" ))
(defentry XButtonEvent-state (fixnum) ( fixnum "XButtonEvent_state" ))
(defentry set-XButtonEvent-state (fixnum fixnum) ( void "set_XButtonEvent_state" ))
(defentry XButtonEvent-y_root (fixnum) ( fixnum "XButtonEvent_y_root" ))
(defentry set-XButtonEvent-y_root (fixnum fixnum) ( void "set_XButtonEvent_y_root" ))
(defentry XButtonEvent-x_root (fixnum) ( fixnum "XButtonEvent_x_root" ))
(defentry set-XButtonEvent-x_root (fixnum fixnum) ( void "set_XButtonEvent_x_root" ))
(defentry XButtonEvent-y (fixnum) ( fixnum "XButtonEvent_y" ))
(defentry set-XButtonEvent-y (fixnum fixnum) ( void "set_XButtonEvent_y" ))
(defentry XButtonEvent-x (fixnum) ( fixnum "XButtonEvent_x" ))
(defentry set-XButtonEvent-x (fixnum fixnum) ( void "set_XButtonEvent_x" ))
(defentry XButtonEvent-time (fixnum) ( fixnum "XButtonEvent_time" ))
(defentry set-XButtonEvent-time (fixnum fixnum) ( void "set_XButtonEvent_time" ))
(defentry XButtonEvent-subwindow (fixnum) ( fixnum "XButtonEvent_subwindow" ))
(defentry set-XButtonEvent-subwindow (fixnum fixnum) ( void "set_XButtonEvent_subwindow" ))
(defentry XButtonEvent-root (fixnum) ( fixnum "XButtonEvent_root" ))
(defentry set-XButtonEvent-root (fixnum fixnum) ( void "set_XButtonEvent_root" ))
(defentry XButtonEvent-window (fixnum) ( fixnum "XButtonEvent_window" ))
(defentry set-XButtonEvent-window (fixnum fixnum) ( void "set_XButtonEvent_window" ))
(defentry XButtonEvent-display (fixnum) ( fixnum "XButtonEvent_display" ))
(defentry set-XButtonEvent-display (fixnum fixnum) ( void "set_XButtonEvent_display" ))
(defentry XButtonEvent-send_event (fixnum) ( fixnum "XButtonEvent_send_event" ))
(defentry set-XButtonEvent-send_event (fixnum fixnum) ( void "set_XButtonEvent_send_event" ))
(defentry XButtonEvent-serial (fixnum) ( fixnum "XButtonEvent_serial" ))
(defentry set-XButtonEvent-serial (fixnum fixnum) ( void "set_XButtonEvent_serial" ))
(defentry XButtonEvent-type (fixnum) ( fixnum "XButtonEvent_type" ))
(defentry set-XButtonEvent-type (fixnum fixnum) ( void "set_XButtonEvent_type" ))


;;;;;; XMotionEvent funcions ;;;;;;

(defentry make-XMotionEvent () ( fixnum  "make_XMotionEvent" ))
(defentry XMotionEvent-same_screen (fixnum) ( fixnum "XMotionEvent_same_screen" ))
(defentry set-XMotionEvent-same_screen (fixnum fixnum) ( void "set_XMotionEvent_same_screen" ))
(defentry XMotionEvent-is_hint (fixnum) ( char "XMotionEvent_is_hint" ))
(defentry set-XMotionEvent-is_hint (fixnum char) ( void "set_XMotionEvent_is_hint" ))
(defentry XMotionEvent-state (fixnum) ( fixnum "XMotionEvent_state" ))
(defentry set-XMotionEvent-state (fixnum fixnum) ( void "set_XMotionEvent_state" ))
(defentry XMotionEvent-y_root (fixnum) ( fixnum "XMotionEvent_y_root" ))
(defentry set-XMotionEvent-y_root (fixnum fixnum) ( void "set_XMotionEvent_y_root" ))
(defentry XMotionEvent-x_root (fixnum) ( fixnum "XMotionEvent_x_root" ))
(defentry set-XMotionEvent-x_root (fixnum fixnum) ( void "set_XMotionEvent_x_root" ))
(defentry XMotionEvent-y (fixnum) ( fixnum "XMotionEvent_y" ))
(defentry set-XMotionEvent-y (fixnum fixnum) ( void "set_XMotionEvent_y" ))
(defentry XMotionEvent-x (fixnum) ( fixnum "XMotionEvent_x" ))
(defentry set-XMotionEvent-x (fixnum fixnum) ( void "set_XMotionEvent_x" ))
(defentry XMotionEvent-time (fixnum) ( fixnum "XMotionEvent_time" ))
(defentry set-XMotionEvent-time (fixnum fixnum) ( void "set_XMotionEvent_time" ))
(defentry XMotionEvent-subwindow (fixnum) ( fixnum "XMotionEvent_subwindow" ))
(defentry set-XMotionEvent-subwindow (fixnum fixnum) ( void "set_XMotionEvent_subwindow" ))
(defentry XMotionEvent-root (fixnum) ( fixnum "XMotionEvent_root" ))
(defentry set-XMotionEvent-root (fixnum fixnum) ( void "set_XMotionEvent_root" ))
(defentry XMotionEvent-window (fixnum) ( fixnum "XMotionEvent_window" ))
(defentry set-XMotionEvent-window (fixnum fixnum) ( void "set_XMotionEvent_window" ))
(defentry XMotionEvent-display (fixnum) ( fixnum "XMotionEvent_display" ))
(defentry set-XMotionEvent-display (fixnum fixnum) ( void "set_XMotionEvent_display" ))
(defentry XMotionEvent-send_event (fixnum) ( fixnum "XMotionEvent_send_event" ))
(defentry set-XMotionEvent-send_event (fixnum fixnum) ( void "set_XMotionEvent_send_event" ))
(defentry XMotionEvent-serial (fixnum) ( fixnum "XMotionEvent_serial" ))
(defentry set-XMotionEvent-serial (fixnum fixnum) ( void "set_XMotionEvent_serial" ))
(defentry XMotionEvent-type (fixnum) ( fixnum "XMotionEvent_type" ))
(defentry set-XMotionEvent-type (fixnum fixnum) ( void "set_XMotionEvent_type" ))


;;;;;; XCrossingEvent funcions ;;;;;;

(defentry make-XCrossingEvent () ( fixnum  "make_XCrossingEvent" ))
(defentry XCrossingEvent-state (fixnum) ( fixnum "XCrossingEvent_state" ))
(defentry set-XCrossingEvent-state (fixnum fixnum) ( void "set_XCrossingEvent_state" ))
(defentry XCrossingEvent-focus (fixnum) ( fixnum "XCrossingEvent_focus" ))
(defentry set-XCrossingEvent-focus (fixnum fixnum) ( void "set_XCrossingEvent_focus" ))
(defentry XCrossingEvent-same_screen (fixnum) ( fixnum "XCrossingEvent_same_screen" ))
(defentry set-XCrossingEvent-same_screen (fixnum fixnum) ( void "set_XCrossingEvent_same_screen" ))
(defentry XCrossingEvent-detail (fixnum) ( fixnum "XCrossingEvent_detail" ))
(defentry set-XCrossingEvent-detail (fixnum fixnum) ( void "set_XCrossingEvent_detail" ))
(defentry XCrossingEvent-mode (fixnum) ( fixnum "XCrossingEvent_mode" ))
(defentry set-XCrossingEvent-mode (fixnum fixnum) ( void "set_XCrossingEvent_mode" ))
(defentry XCrossingEvent-y_root (fixnum) ( fixnum "XCrossingEvent_y_root" ))
(defentry set-XCrossingEvent-y_root (fixnum fixnum) ( void "set_XCrossingEvent_y_root" ))
(defentry XCrossingEvent-x_root (fixnum) ( fixnum "XCrossingEvent_x_root" ))
(defentry set-XCrossingEvent-x_root (fixnum fixnum) ( void "set_XCrossingEvent_x_root" ))
(defentry XCrossingEvent-y (fixnum) ( fixnum "XCrossingEvent_y" ))
(defentry set-XCrossingEvent-y (fixnum fixnum) ( void "set_XCrossingEvent_y" ))
(defentry XCrossingEvent-x (fixnum) ( fixnum "XCrossingEvent_x" ))
(defentry set-XCrossingEvent-x (fixnum fixnum) ( void "set_XCrossingEvent_x" ))
(defentry XCrossingEvent-time (fixnum) ( fixnum "XCrossingEvent_time" ))
(defentry set-XCrossingEvent-time (fixnum fixnum) ( void "set_XCrossingEvent_time" ))
(defentry XCrossingEvent-subwindow (fixnum) ( fixnum "XCrossingEvent_subwindow" ))
(defentry set-XCrossingEvent-subwindow (fixnum fixnum) ( void "set_XCrossingEvent_subwindow" ))
(defentry XCrossingEvent-root (fixnum) ( fixnum "XCrossingEvent_root" ))
(defentry set-XCrossingEvent-root (fixnum fixnum) ( void "set_XCrossingEvent_root" ))
(defentry XCrossingEvent-window (fixnum) ( fixnum "XCrossingEvent_window" ))
(defentry set-XCrossingEvent-window (fixnum fixnum) ( void "set_XCrossingEvent_window" ))
(defentry XCrossingEvent-display (fixnum) ( fixnum "XCrossingEvent_display" ))
(defentry set-XCrossingEvent-display (fixnum fixnum) ( void "set_XCrossingEvent_display" ))
(defentry XCrossingEvent-send_event (fixnum) ( fixnum "XCrossingEvent_send_event" ))
(defentry set-XCrossingEvent-send_event (fixnum fixnum) ( void "set_XCrossingEvent_send_event" ))
(defentry XCrossingEvent-serial (fixnum) ( fixnum "XCrossingEvent_serial" ))
(defentry set-XCrossingEvent-serial (fixnum fixnum) ( void "set_XCrossingEvent_serial" ))
(defentry XCrossingEvent-type (fixnum) ( fixnum "XCrossingEvent_type" ))
(defentry set-XCrossingEvent-type (fixnum fixnum) ( void "set_XCrossingEvent_type" ))


;;;;;; XFocusChangeEvent funcions ;;;;;;

(defentry make-XFocusChangeEvent () ( fixnum  "make_XFocusChangeEvent" ))
(defentry XFocusChangeEvent-detail (fixnum) ( fixnum "XFocusChangeEvent_detail" ))
(defentry set-XFocusChangeEvent-detail (fixnum fixnum) ( void "set_XFocusChangeEvent_detail" ))
(defentry XFocusChangeEvent-mode (fixnum) ( fixnum "XFocusChangeEvent_mode" ))
(defentry set-XFocusChangeEvent-mode (fixnum fixnum) ( void "set_XFocusChangeEvent_mode" ))
(defentry XFocusChangeEvent-window (fixnum) ( fixnum "XFocusChangeEvent_window" ))
(defentry set-XFocusChangeEvent-window (fixnum fixnum) ( void "set_XFocusChangeEvent_window" ))
(defentry XFocusChangeEvent-display (fixnum) ( fixnum "XFocusChangeEvent_display" ))
(defentry set-XFocusChangeEvent-display (fixnum fixnum) ( void "set_XFocusChangeEvent_display" ))
(defentry XFocusChangeEvent-send_event (fixnum) ( fixnum "XFocusChangeEvent_send_event" ))
(defentry set-XFocusChangeEvent-send_event (fixnum fixnum) ( void "set_XFocusChangeEvent_send_event" ))
(defentry XFocusChangeEvent-serial (fixnum) ( fixnum "XFocusChangeEvent_serial" ))
(defentry set-XFocusChangeEvent-serial (fixnum fixnum) ( void "set_XFocusChangeEvent_serial" ))
(defentry XFocusChangeEvent-type (fixnum) ( fixnum "XFocusChangeEvent_type" ))
(defentry set-XFocusChangeEvent-type (fixnum fixnum) ( void "set_XFocusChangeEvent_type" ))


;;;;;; XKeymapEvent funcions ;;;;;;

(defentry make-XKeymapEvent () ( fixnum  "make_XKeymapEvent" ))
;;(defentry XKeymapEvent-key_vector[32] (fixnum) ( char "XKeymapEvent_key_vector[32]" ))
;;(defentry set-XKeymapEvent-key_vector[32] (fixnum char) ( void "set_XKeymapEvent_key_vector[32]" ))
(defentry XKeymapEvent-window (fixnum) ( fixnum "XKeymapEvent_window" ))
(defentry set-XKeymapEvent-window (fixnum fixnum) ( void "set_XKeymapEvent_window" ))
(defentry XKeymapEvent-display (fixnum) ( fixnum "XKeymapEvent_display" ))
(defentry set-XKeymapEvent-display (fixnum fixnum) ( void "set_XKeymapEvent_display" ))
(defentry XKeymapEvent-send_event (fixnum) ( fixnum "XKeymapEvent_send_event" ))
(defentry set-XKeymapEvent-send_event (fixnum fixnum) ( void "set_XKeymapEvent_send_event" ))
(defentry XKeymapEvent-serial (fixnum) ( fixnum "XKeymapEvent_serial" ))
(defentry set-XKeymapEvent-serial (fixnum fixnum) ( void "set_XKeymapEvent_serial" ))
(defentry XKeymapEvent-type (fixnum) ( fixnum "XKeymapEvent_type" ))
(defentry set-XKeymapEvent-type (fixnum fixnum) ( void "set_XKeymapEvent_type" ))


;;;;;; XExposeEvent funcions ;;;;;;

(defentry make-XExposeEvent () ( fixnum  "make_XExposeEvent" ))
(defentry XExposeEvent-count (fixnum) ( fixnum "XExposeEvent_count" ))
(defentry set-XExposeEvent-count (fixnum fixnum) ( void "set_XExposeEvent_count" ))
(defentry XExposeEvent-height (fixnum) ( fixnum "XExposeEvent_height" ))
(defentry set-XExposeEvent-height (fixnum fixnum) ( void "set_XExposeEvent_height" ))
(defentry XExposeEvent-width (fixnum) ( fixnum "XExposeEvent_width" ))
(defentry set-XExposeEvent-width (fixnum fixnum) ( void "set_XExposeEvent_width" ))
(defentry XExposeEvent-y (fixnum) ( fixnum "XExposeEvent_y" ))
(defentry set-XExposeEvent-y (fixnum fixnum) ( void "set_XExposeEvent_y" ))
(defentry XExposeEvent-x (fixnum) ( fixnum "XExposeEvent_x" ))
(defentry set-XExposeEvent-x (fixnum fixnum) ( void "set_XExposeEvent_x" ))
(defentry XExposeEvent-window (fixnum) ( fixnum "XExposeEvent_window" ))
(defentry set-XExposeEvent-window (fixnum fixnum) ( void "set_XExposeEvent_window" ))
(defentry XExposeEvent-display (fixnum) ( fixnum "XExposeEvent_display" ))
(defentry set-XExposeEvent-display (fixnum fixnum) ( void "set_XExposeEvent_display" ))
(defentry XExposeEvent-send_event (fixnum) ( fixnum "XExposeEvent_send_event" ))
(defentry set-XExposeEvent-send_event (fixnum fixnum) ( void "set_XExposeEvent_send_event" ))
(defentry XExposeEvent-serial (fixnum) ( fixnum "XExposeEvent_serial" ))
(defentry set-XExposeEvent-serial (fixnum fixnum) ( void "set_XExposeEvent_serial" ))
(defentry XExposeEvent-type (fixnum) ( fixnum "XExposeEvent_type" ))
(defentry set-XExposeEvent-type (fixnum fixnum) ( void "set_XExposeEvent_type" ))


;;;;;; XGraphicsExposeEvent funcions ;;;;;;

(defentry make-XGraphicsExposeEvent () ( fixnum  "make_XGraphicsExposeEvent" ))
(defentry XGraphicsExposeEvent-minor_code (fixnum) ( fixnum "XGraphicsExposeEvent_minor_code" ))
(defentry set-XGraphicsExposeEvent-minor_code (fixnum fixnum) ( void "set_XGraphicsExposeEvent_minor_code" ))
(defentry XGraphicsExposeEvent-major_code (fixnum) ( fixnum "XGraphicsExposeEvent_major_code" ))
(defentry set-XGraphicsExposeEvent-major_code (fixnum fixnum) ( void "set_XGraphicsExposeEvent_major_code" ))
(defentry XGraphicsExposeEvent-count (fixnum) ( fixnum "XGraphicsExposeEvent_count" ))
(defentry set-XGraphicsExposeEvent-count (fixnum fixnum) ( void "set_XGraphicsExposeEvent_count" ))
(defentry XGraphicsExposeEvent-height (fixnum) ( fixnum "XGraphicsExposeEvent_height" ))
(defentry set-XGraphicsExposeEvent-height (fixnum fixnum) ( void "set_XGraphicsExposeEvent_height" ))
(defentry XGraphicsExposeEvent-width (fixnum) ( fixnum "XGraphicsExposeEvent_width" ))
(defentry set-XGraphicsExposeEvent-width (fixnum fixnum) ( void "set_XGraphicsExposeEvent_width" ))
(defentry XGraphicsExposeEvent-y (fixnum) ( fixnum "XGraphicsExposeEvent_y" ))
(defentry set-XGraphicsExposeEvent-y (fixnum fixnum) ( void "set_XGraphicsExposeEvent_y" ))
(defentry XGraphicsExposeEvent-x (fixnum) ( fixnum "XGraphicsExposeEvent_x" ))
(defentry set-XGraphicsExposeEvent-x (fixnum fixnum) ( void "set_XGraphicsExposeEvent_x" ))
(defentry XGraphicsExposeEvent-drawable (fixnum) (fixnum "XGraphicsExposeEvent_drawable" ))
(defentry set-XGraphicsExposeEvent-drawable (fixnum fixnum) ( void "set_XGraphicsExposeEvent_drawable" ))
(defentry XGraphicsExposeEvent-display (fixnum) ( fixnum "XGraphicsExposeEvent_display" ))
(defentry set-XGraphicsExposeEvent-display (fixnum fixnum) ( void "set_XGraphicsExposeEvent_display" ))
(defentry XGraphicsExposeEvent-send_event (fixnum) ( fixnum "XGraphicsExposeEvent_send_event" ))
(defentry set-XGraphicsExposeEvent-send_event (fixnum fixnum) ( void "set_XGraphicsExposeEvent_send_event" ))
(defentry XGraphicsExposeEvent-serial (fixnum) ( fixnum "XGraphicsExposeEvent_serial" ))
(defentry set-XGraphicsExposeEvent-serial (fixnum fixnum) ( void "set_XGraphicsExposeEvent_serial" ))
(defentry XGraphicsExposeEvent-type (fixnum) ( fixnum "XGraphicsExposeEvent_type" ))
(defentry set-XGraphicsExposeEvent-type (fixnum fixnum) ( void "set_XGraphicsExposeEvent_type" ))


;;;;;; XNoExposeEvent funcions ;;;;;;

(defentry make-XNoExposeEvent () ( fixnum  "make_XNoExposeEvent" ))
(defentry XNoExposeEvent-minor_code (fixnum) ( fixnum "XNoExposeEvent_minor_code" ))
(defentry set-XNoExposeEvent-minor_code (fixnum fixnum) ( void "set_XNoExposeEvent_minor_code" ))
(defentry XNoExposeEvent-major_code (fixnum) ( fixnum "XNoExposeEvent_major_code" ))
(defentry set-XNoExposeEvent-major_code (fixnum fixnum) ( void "set_XNoExposeEvent_major_code" ))
(defentry XNoExposeEvent-drawable (fixnum) ( fixnum "XNoExposeEvent_drawable" ))
(defentry set-XNoExposeEvent-drawable (fixnum fixnum) ( void "set_XNoExposeEvent_drawable" ))
(defentry XNoExposeEvent-display (fixnum) ( fixnum "XNoExposeEvent_display" ))
(defentry set-XNoExposeEvent-display (fixnum fixnum) ( void "set_XNoExposeEvent_display" ))
(defentry XNoExposeEvent-send_event (fixnum) ( fixnum "XNoExposeEvent_send_event" ))
(defentry set-XNoExposeEvent-send_event (fixnum fixnum) ( void "set_XNoExposeEvent_send_event" ))
(defentry XNoExposeEvent-serial (fixnum) ( fixnum "XNoExposeEvent_serial" ))
(defentry set-XNoExposeEvent-serial (fixnum fixnum) ( void "set_XNoExposeEvent_serial" ))
(defentry XNoExposeEvent-type (fixnum) ( fixnum "XNoExposeEvent_type" ))
(defentry set-XNoExposeEvent-type (fixnum fixnum) ( void "set_XNoExposeEvent_type" ))


;;;;;; XVisibilityEvent funcions ;;;;;;

(defentry make-XVisibilityEvent () ( fixnum  "make_XVisibilityEvent" ))
(defentry XVisibilityEvent-state (fixnum) ( fixnum "XVisibilityEvent_state" ))
(defentry set-XVisibilityEvent-state (fixnum fixnum) ( void "set_XVisibilityEvent_state" ))
(defentry XVisibilityEvent-window (fixnum) ( fixnum "XVisibilityEvent_window" ))
(defentry set-XVisibilityEvent-window (fixnum fixnum) ( void "set_XVisibilityEvent_window" ))
(defentry XVisibilityEvent-display (fixnum) ( fixnum "XVisibilityEvent_display" ))
(defentry set-XVisibilityEvent-display (fixnum fixnum) ( void "set_XVisibilityEvent_display" ))
(defentry XVisibilityEvent-send_event (fixnum) ( fixnum "XVisibilityEvent_send_event" ))
(defentry set-XVisibilityEvent-send_event (fixnum fixnum) ( void "set_XVisibilityEvent_send_event" ))
(defentry XVisibilityEvent-serial (fixnum) ( fixnum "XVisibilityEvent_serial" ))
(defentry set-XVisibilityEvent-serial (fixnum fixnum) ( void "set_XVisibilityEvent_serial" ))
(defentry XVisibilityEvent-type (fixnum) ( fixnum "XVisibilityEvent_type" ))
(defentry set-XVisibilityEvent-type (fixnum fixnum) ( void "set_XVisibilityEvent_type" ))


;;;;;; XCreateWindowEvent funcions ;;;;;;

(defentry make-XCreateWindowEvent () ( fixnum  "make_XCreateWindowEvent" ))
(defentry XCreateWindowEvent-override_redirect (fixnum) ( fixnum "XCreateWindowEvent_override_redirect" ))
(defentry set-XCreateWindowEvent-override_redirect (fixnum fixnum) ( void "set_XCreateWindowEvent_override_redirect" ))
(defentry XCreateWindowEvent-border_width (fixnum) ( fixnum "XCreateWindowEvent_border_width" ))
(defentry set-XCreateWindowEvent-border_width (fixnum fixnum) ( void "set_XCreateWindowEvent_border_width" ))
(defentry XCreateWindowEvent-height (fixnum) ( fixnum "XCreateWindowEvent_height" ))
(defentry set-XCreateWindowEvent-height (fixnum fixnum) ( void "set_XCreateWindowEvent_height" ))
(defentry XCreateWindowEvent-width (fixnum) ( fixnum "XCreateWindowEvent_width" ))
(defentry set-XCreateWindowEvent-width (fixnum fixnum) ( void "set_XCreateWindowEvent_width" ))
(defentry XCreateWindowEvent-y (fixnum) ( fixnum "XCreateWindowEvent_y" ))
(defentry set-XCreateWindowEvent-y (fixnum fixnum) ( void "set_XCreateWindowEvent_y" ))
(defentry XCreateWindowEvent-x (fixnum) ( fixnum "XCreateWindowEvent_x" ))
(defentry set-XCreateWindowEvent-x (fixnum fixnum) ( void "set_XCreateWindowEvent_x" ))
(defentry XCreateWindowEvent-window (fixnum) ( fixnum "XCreateWindowEvent_window" ))
(defentry set-XCreateWindowEvent-window (fixnum fixnum) ( void "set_XCreateWindowEvent_window" ))
(defentry XCreateWindowEvent-parent (fixnum) ( fixnum "XCreateWindowEvent_parent" ))
(defentry set-XCreateWindowEvent-parent (fixnum fixnum) ( void "set_XCreateWindowEvent_parent" ))
(defentry XCreateWindowEvent-display (fixnum) ( fixnum "XCreateWindowEvent_display" ))
(defentry set-XCreateWindowEvent-display (fixnum fixnum) ( void "set_XCreateWindowEvent_display" ))
(defentry XCreateWindowEvent-send_event (fixnum) ( fixnum "XCreateWindowEvent_send_event" ))
(defentry set-XCreateWindowEvent-send_event (fixnum fixnum) ( void "set_XCreateWindowEvent_send_event" ))
(defentry XCreateWindowEvent-serial (fixnum) ( fixnum "XCreateWindowEvent_serial" ))
(defentry set-XCreateWindowEvent-serial (fixnum fixnum) ( void "set_XCreateWindowEvent_serial" ))
(defentry XCreateWindowEvent-type (fixnum) ( fixnum "XCreateWindowEvent_type" ))
(defentry set-XCreateWindowEvent-type (fixnum fixnum) ( void "set_XCreateWindowEvent_type" ))


;;;;;; XDestroyWindowEvent funcions ;;;;;;

(defentry make-XDestroyWindowEvent () ( fixnum  "make_XDestroyWindowEvent" ))
(defentry XDestroyWindowEvent-window (fixnum) ( fixnum "XDestroyWindowEvent_window" ))
(defentry set-XDestroyWindowEvent-window (fixnum fixnum) ( void "set_XDestroyWindowEvent_window" ))
(defentry XDestroyWindowEvent-event (fixnum) ( fixnum "XDestroyWindowEvent_event" ))
(defentry set-XDestroyWindowEvent-event (fixnum fixnum) ( void "set_XDestroyWindowEvent_event" ))
(defentry XDestroyWindowEvent-display (fixnum) ( fixnum "XDestroyWindowEvent_display" ))
(defentry set-XDestroyWindowEvent-display (fixnum fixnum) ( void "set_XDestroyWindowEvent_display" ))
(defentry XDestroyWindowEvent-send_event (fixnum) ( fixnum "XDestroyWindowEvent_send_event" ))
(defentry set-XDestroyWindowEvent-send_event (fixnum fixnum) ( void "set_XDestroyWindowEvent_send_event" ))
(defentry XDestroyWindowEvent-serial (fixnum) ( fixnum "XDestroyWindowEvent_serial" ))
(defentry set-XDestroyWindowEvent-serial (fixnum fixnum) ( void "set_XDestroyWindowEvent_serial" ))
(defentry XDestroyWindowEvent-type (fixnum) ( fixnum "XDestroyWindowEvent_type" ))
(defentry set-XDestroyWindowEvent-type (fixnum fixnum) ( void "set_XDestroyWindowEvent_type" ))


;;;;;; XUnmapEvent funcions ;;;;;;

(defentry make-XUnmapEvent () ( fixnum  "make_XUnmapEvent" ))
(defentry XUnmapEvent-from_configure (fixnum) ( fixnum "XUnmapEvent_from_configure" ))
(defentry set-XUnmapEvent-from_configure (fixnum fixnum) ( void "set_XUnmapEvent_from_configure" ))
(defentry XUnmapEvent-window (fixnum) ( fixnum "XUnmapEvent_window" ))
(defentry set-XUnmapEvent-window (fixnum fixnum) ( void "set_XUnmapEvent_window" ))
(defentry XUnmapEvent-event (fixnum) ( fixnum "XUnmapEvent_event" ))
(defentry set-XUnmapEvent-event (fixnum fixnum) ( void "set_XUnmapEvent_event" ))
(defentry XUnmapEvent-display (fixnum) ( fixnum "XUnmapEvent_display" ))
(defentry set-XUnmapEvent-display (fixnum fixnum) ( void "set_XUnmapEvent_display" ))
(defentry XUnmapEvent-send_event (fixnum) ( fixnum "XUnmapEvent_send_event" ))
(defentry set-XUnmapEvent-send_event (fixnum fixnum) ( void "set_XUnmapEvent_send_event" ))
(defentry XUnmapEvent-serial (fixnum) ( fixnum "XUnmapEvent_serial" ))
(defentry set-XUnmapEvent-serial (fixnum fixnum) ( void "set_XUnmapEvent_serial" ))
(defentry XUnmapEvent-type (fixnum) ( fixnum "XUnmapEvent_type" ))
(defentry set-XUnmapEvent-type (fixnum fixnum) ( void "set_XUnmapEvent_type" ))


;;;;;; XMapEvent funcions ;;;;;;

(defentry make-XMapEvent () ( fixnum  "make_XMapEvent" ))
(defentry XMapEvent-override_redirect (fixnum) ( fixnum "XMapEvent_override_redirect" ))
(defentry set-XMapEvent-override_redirect (fixnum fixnum) ( void "set_XMapEvent_override_redirect" ))
(defentry XMapEvent-window (fixnum) ( fixnum "XMapEvent_window" ))
(defentry set-XMapEvent-window (fixnum fixnum) ( void "set_XMapEvent_window" ))
(defentry XMapEvent-event (fixnum) ( fixnum "XMapEvent_event" ))
(defentry set-XMapEvent-event (fixnum fixnum) ( void "set_XMapEvent_event" ))
(defentry XMapEvent-display (fixnum) ( fixnum "XMapEvent_display" ))
(defentry set-XMapEvent-display (fixnum fixnum) ( void "set_XMapEvent_display" ))
(defentry XMapEvent-send_event (fixnum) ( fixnum "XMapEvent_send_event" ))
(defentry set-XMapEvent-send_event (fixnum fixnum) ( void "set_XMapEvent_send_event" ))
(defentry XMapEvent-serial (fixnum) ( fixnum "XMapEvent_serial" ))
(defentry set-XMapEvent-serial (fixnum fixnum) ( void "set_XMapEvent_serial" ))
(defentry XMapEvent-type (fixnum) ( fixnum "XMapEvent_type" ))
(defentry set-XMapEvent-type (fixnum fixnum) ( void "set_XMapEvent_type" ))


;;;;;; XMapRequestEvent funcions ;;;;;;

(defentry make-XMapRequestEvent () ( fixnum  "make_XMapRequestEvent" ))
(defentry XMapRequestEvent-window (fixnum) ( fixnum "XMapRequestEvent_window" ))
(defentry set-XMapRequestEvent-window (fixnum fixnum) ( void "set_XMapRequestEvent_window" ))
(defentry XMapRequestEvent-parent (fixnum) ( fixnum "XMapRequestEvent_parent" ))
(defentry set-XMapRequestEvent-parent (fixnum fixnum) ( void "set_XMapRequestEvent_parent" ))
(defentry XMapRequestEvent-display (fixnum) ( fixnum "XMapRequestEvent_display" ))
(defentry set-XMapRequestEvent-display (fixnum fixnum) ( void "set_XMapRequestEvent_display" ))
(defentry XMapRequestEvent-send_event (fixnum) ( fixnum "XMapRequestEvent_send_event" ))
(defentry set-XMapRequestEvent-send_event (fixnum fixnum) ( void "set_XMapRequestEvent_send_event" ))
(defentry XMapRequestEvent-serial (fixnum) ( fixnum "XMapRequestEvent_serial" ))
(defentry set-XMapRequestEvent-serial (fixnum fixnum) ( void "set_XMapRequestEvent_serial" ))
(defentry XMapRequestEvent-type (fixnum) ( fixnum "XMapRequestEvent_type" ))
(defentry set-XMapRequestEvent-type (fixnum fixnum) ( void "set_XMapRequestEvent_type" ))


;;;;;; XReparentEvent funcions ;;;;;;

(defentry make-XReparentEvent () ( fixnum  "make_XReparentEvent" ))
(defentry XReparentEvent-override_redirect (fixnum) ( fixnum "XReparentEvent_override_redirect" ))
(defentry set-XReparentEvent-override_redirect (fixnum fixnum) ( void "set_XReparentEvent_override_redirect" ))
(defentry XReparentEvent-y (fixnum) ( fixnum "XReparentEvent_y" ))
(defentry set-XReparentEvent-y (fixnum fixnum) ( void "set_XReparentEvent_y" ))
(defentry XReparentEvent-x (fixnum) ( fixnum "XReparentEvent_x" ))
(defentry set-XReparentEvent-x (fixnum fixnum) ( void "set_XReparentEvent_x" ))
(defentry XReparentEvent-parent (fixnum) ( fixnum "XReparentEvent_parent" ))
(defentry set-XReparentEvent-parent (fixnum fixnum) ( void "set_XReparentEvent_parent" ))
(defentry XReparentEvent-window (fixnum) ( fixnum "XReparentEvent_window" ))
(defentry set-XReparentEvent-window (fixnum fixnum) ( void "set_XReparentEvent_window" ))
(defentry XReparentEvent-event (fixnum) ( fixnum "XReparentEvent_event" ))
(defentry set-XReparentEvent-event (fixnum fixnum) ( void "set_XReparentEvent_event" ))
(defentry XReparentEvent-display (fixnum) ( fixnum "XReparentEvent_display" ))
(defentry set-XReparentEvent-display (fixnum fixnum) ( void "set_XReparentEvent_display" ))
(defentry XReparentEvent-send_event (fixnum) ( fixnum "XReparentEvent_send_event" ))
(defentry set-XReparentEvent-send_event (fixnum fixnum) ( void "set_XReparentEvent_send_event" ))
(defentry XReparentEvent-serial (fixnum) ( fixnum "XReparentEvent_serial" ))
(defentry set-XReparentEvent-serial (fixnum fixnum) ( void "set_XReparentEvent_serial" ))
(defentry XReparentEvent-type (fixnum) ( fixnum "XReparentEvent_type" ))
(defentry set-XReparentEvent-type (fixnum fixnum) ( void "set_XReparentEvent_type" ))


;;;;;; XConfigureEvent funcions ;;;;;;

(defentry make-XConfigureEvent () ( fixnum  "make_XConfigureEvent" ))
(defentry XConfigureEvent-override_redirect (fixnum) ( fixnum "XConfigureEvent_override_redirect" ))
(defentry set-XConfigureEvent-override_redirect (fixnum fixnum) ( void "set_XConfigureEvent_override_redirect" ))
(defentry XConfigureEvent-above (fixnum) ( fixnum "XConfigureEvent_above" ))
(defentry set-XConfigureEvent-above (fixnum fixnum) ( void "set_XConfigureEvent_above" ))
(defentry XConfigureEvent-border_width (fixnum) ( fixnum "XConfigureEvent_border_width" ))
(defentry set-XConfigureEvent-border_width (fixnum fixnum) ( void "set_XConfigureEvent_border_width" ))
(defentry XConfigureEvent-height (fixnum) ( fixnum "XConfigureEvent_height" ))
(defentry set-XConfigureEvent-height (fixnum fixnum) ( void "set_XConfigureEvent_height" ))
(defentry XConfigureEvent-width (fixnum) ( fixnum "XConfigureEvent_width" ))
(defentry set-XConfigureEvent-width (fixnum fixnum) ( void "set_XConfigureEvent_width" ))
(defentry XConfigureEvent-y (fixnum) ( fixnum "XConfigureEvent_y" ))
(defentry set-XConfigureEvent-y (fixnum fixnum) ( void "set_XConfigureEvent_y" ))
(defentry XConfigureEvent-x (fixnum) ( fixnum "XConfigureEvent_x" ))
(defentry set-XConfigureEvent-x (fixnum fixnum) ( void "set_XConfigureEvent_x" ))
(defentry XConfigureEvent-window (fixnum) ( fixnum "XConfigureEvent_window" ))
(defentry set-XConfigureEvent-window (fixnum fixnum) ( void "set_XConfigureEvent_window" ))
(defentry XConfigureEvent-event (fixnum) ( fixnum "XConfigureEvent_event" ))
(defentry set-XConfigureEvent-event (fixnum fixnum) ( void "set_XConfigureEvent_event" ))
(defentry XConfigureEvent-display (fixnum) ( fixnum "XConfigureEvent_display" ))
(defentry set-XConfigureEvent-display (fixnum fixnum) ( void "set_XConfigureEvent_display" ))
(defentry XConfigureEvent-send_event (fixnum) ( fixnum "XConfigureEvent_send_event" ))
(defentry set-XConfigureEvent-send_event (fixnum fixnum) ( void "set_XConfigureEvent_send_event" ))
(defentry XConfigureEvent-serial (fixnum) ( fixnum "XConfigureEvent_serial" ))
(defentry set-XConfigureEvent-serial (fixnum fixnum) ( void "set_XConfigureEvent_serial" ))
(defentry XConfigureEvent-type (fixnum) ( fixnum "XConfigureEvent_type" ))
(defentry set-XConfigureEvent-type (fixnum fixnum) ( void "set_XConfigureEvent_type" ))


;;;;;; XGravityEvent funcions ;;;;;;

(defentry make-XGravityEvent () ( fixnum  "make_XGravityEvent" ))
(defentry XGravityEvent-y (fixnum) ( fixnum "XGravityEvent_y" ))
(defentry set-XGravityEvent-y (fixnum fixnum) ( void "set_XGravityEvent_y" ))
(defentry XGravityEvent-x (fixnum) ( fixnum "XGravityEvent_x" ))
(defentry set-XGravityEvent-x (fixnum fixnum) ( void "set_XGravityEvent_x" ))
(defentry XGravityEvent-window (fixnum) ( fixnum "XGravityEvent_window" ))
(defentry set-XGravityEvent-window (fixnum fixnum) ( void "set_XGravityEvent_window" ))
(defentry XGravityEvent-event (fixnum) ( fixnum "XGravityEvent_event" ))
(defentry set-XGravityEvent-event (fixnum fixnum) ( void "set_XGravityEvent_event" ))
(defentry XGravityEvent-display (fixnum) ( fixnum "XGravityEvent_display" ))
(defentry set-XGravityEvent-display (fixnum fixnum) ( void "set_XGravityEvent_display" ))
(defentry XGravityEvent-send_event (fixnum) ( fixnum "XGravityEvent_send_event" ))
(defentry set-XGravityEvent-send_event (fixnum fixnum) ( void "set_XGravityEvent_send_event" ))
(defentry XGravityEvent-serial (fixnum) ( fixnum "XGravityEvent_serial" ))
(defentry set-XGravityEvent-serial (fixnum fixnum) ( void "set_XGravityEvent_serial" ))
(defentry XGravityEvent-type (fixnum) ( fixnum "XGravityEvent_type" ))
(defentry set-XGravityEvent-type (fixnum fixnum) ( void "set_XGravityEvent_type" ))


;;;;;; XResizeRequestEvent funcions ;;;;;;

(defentry make-XResizeRequestEvent () ( fixnum  "make_XResizeRequestEvent" ))
(defentry XResizeRequestEvent-height (fixnum) ( fixnum "XResizeRequestEvent_height" ))
(defentry set-XResizeRequestEvent-height (fixnum fixnum) ( void "set_XResizeRequestEvent_height" ))
(defentry XResizeRequestEvent-width (fixnum) ( fixnum "XResizeRequestEvent_width" ))
(defentry set-XResizeRequestEvent-width (fixnum fixnum) ( void "set_XResizeRequestEvent_width" ))
(defentry XResizeRequestEvent-window (fixnum) ( fixnum "XResizeRequestEvent_window" ))
(defentry set-XResizeRequestEvent-window (fixnum fixnum) ( void "set_XResizeRequestEvent_window" ))
(defentry XResizeRequestEvent-display (fixnum) ( fixnum "XResizeRequestEvent_display" ))
(defentry set-XResizeRequestEvent-display (fixnum fixnum) ( void "set_XResizeRequestEvent_display" ))
(defentry XResizeRequestEvent-send_event (fixnum) ( fixnum "XResizeRequestEvent_send_event" ))
(defentry set-XResizeRequestEvent-send_event (fixnum fixnum) ( void "set_XResizeRequestEvent_send_event" ))
(defentry XResizeRequestEvent-serial (fixnum) ( fixnum "XResizeRequestEvent_serial" ))
(defentry set-XResizeRequestEvent-serial (fixnum fixnum) ( void "set_XResizeRequestEvent_serial" ))
(defentry XResizeRequestEvent-type (fixnum) ( fixnum "XResizeRequestEvent_type" ))
(defentry set-XResizeRequestEvent-type (fixnum fixnum) ( void "set_XResizeRequestEvent_type" ))


;;;;;; XConfigureRequestEvent funcions ;;;;;;

(defentry make-XConfigureRequestEvent () ( fixnum  "make_XConfigureRequestEvent" ))
(defentry XConfigureRequestEvent-value_mask (fixnum) ( fixnum "XConfigureRequestEvent_value_mask" ))
(defentry set-XConfigureRequestEvent-value_mask (fixnum fixnum) ( void "set_XConfigureRequestEvent_value_mask" ))
(defentry XConfigureRequestEvent-detail (fixnum) ( fixnum "XConfigureRequestEvent_detail" ))
(defentry set-XConfigureRequestEvent-detail (fixnum fixnum) ( void "set_XConfigureRequestEvent_detail" ))
(defentry XConfigureRequestEvent-above (fixnum) ( fixnum "XConfigureRequestEvent_above" ))
(defentry set-XConfigureRequestEvent-above (fixnum fixnum) ( void "set_XConfigureRequestEvent_above" ))
(defentry XConfigureRequestEvent-border_width (fixnum) ( fixnum "XConfigureRequestEvent_border_width" ))
(defentry set-XConfigureRequestEvent-border_width (fixnum fixnum) ( void "set_XConfigureRequestEvent_border_width" ))
(defentry XConfigureRequestEvent-height (fixnum) ( fixnum "XConfigureRequestEvent_height" ))
(defentry set-XConfigureRequestEvent-height (fixnum fixnum) ( void "set_XConfigureRequestEvent_height" ))
(defentry XConfigureRequestEvent-width (fixnum) ( fixnum "XConfigureRequestEvent_width" ))
(defentry set-XConfigureRequestEvent-width (fixnum fixnum) ( void "set_XConfigureRequestEvent_width" ))
(defentry XConfigureRequestEvent-y (fixnum) ( fixnum "XConfigureRequestEvent_y" ))
(defentry set-XConfigureRequestEvent-y (fixnum fixnum) ( void "set_XConfigureRequestEvent_y" ))
(defentry XConfigureRequestEvent-x (fixnum) ( fixnum "XConfigureRequestEvent_x" ))
(defentry set-XConfigureRequestEvent-x (fixnum fixnum) ( void "set_XConfigureRequestEvent_x" ))
(defentry XConfigureRequestEvent-window (fixnum) ( fixnum "XConfigureRequestEvent_window" ))
(defentry set-XConfigureRequestEvent-window (fixnum fixnum) ( void "set_XConfigureRequestEvent_window" ))
(defentry XConfigureRequestEvent-parent (fixnum) ( fixnum "XConfigureRequestEvent_parent" ))
(defentry set-XConfigureRequestEvent-parent (fixnum fixnum) ( void "set_XConfigureRequestEvent_parent" ))
(defentry XConfigureRequestEvent-display (fixnum) ( fixnum "XConfigureRequestEvent_display" ))
(defentry set-XConfigureRequestEvent-display (fixnum fixnum) ( void "set_XConfigureRequestEvent_display" ))
(defentry XConfigureRequestEvent-send_event (fixnum) ( fixnum "XConfigureRequestEvent_send_event" ))
(defentry set-XConfigureRequestEvent-send_event (fixnum fixnum) ( void "set_XConfigureRequestEvent_send_event" ))
(defentry XConfigureRequestEvent-serial (fixnum) ( fixnum "XConfigureRequestEvent_serial" ))
(defentry set-XConfigureRequestEvent-serial (fixnum fixnum) ( void "set_XConfigureRequestEvent_serial" ))
(defentry XConfigureRequestEvent-type (fixnum) ( fixnum "XConfigureRequestEvent_type" ))
(defentry set-XConfigureRequestEvent-type (fixnum fixnum) ( void "set_XConfigureRequestEvent_type" ))


;;;;;; XCirculateEvent funcions ;;;;;;

(defentry make-XCirculateEvent () ( fixnum  "make_XCirculateEvent" ))
(defentry XCirculateEvent-place (fixnum) ( fixnum "XCirculateEvent_place" ))
(defentry set-XCirculateEvent-place (fixnum fixnum) ( void "set_XCirculateEvent_place" ))
(defentry XCirculateEvent-window (fixnum) ( fixnum "XCirculateEvent_window" ))
(defentry set-XCirculateEvent-window (fixnum fixnum) ( void "set_XCirculateEvent_window" ))
(defentry XCirculateEvent-event (fixnum) ( fixnum "XCirculateEvent_event" ))
(defentry set-XCirculateEvent-event (fixnum fixnum) ( void "set_XCirculateEvent_event" ))
(defentry XCirculateEvent-display (fixnum) ( fixnum "XCirculateEvent_display" ))
(defentry set-XCirculateEvent-display (fixnum fixnum) ( void "set_XCirculateEvent_display" ))
(defentry XCirculateEvent-send_event (fixnum) ( fixnum "XCirculateEvent_send_event" ))
(defentry set-XCirculateEvent-send_event (fixnum fixnum) ( void "set_XCirculateEvent_send_event" ))
(defentry XCirculateEvent-serial (fixnum) ( fixnum "XCirculateEvent_serial" ))
(defentry set-XCirculateEvent-serial (fixnum fixnum) ( void "set_XCirculateEvent_serial" ))
(defentry XCirculateEvent-type (fixnum) ( fixnum "XCirculateEvent_type" ))
(defentry set-XCirculateEvent-type (fixnum fixnum) ( void "set_XCirculateEvent_type" ))


;;;;;; XCirculateRequestEvent funcions ;;;;;;

(defentry make-XCirculateRequestEvent () ( fixnum  "make_XCirculateRequestEvent" ))
(defentry XCirculateRequestEvent-place (fixnum) ( fixnum "XCirculateRequestEvent_place" ))
(defentry set-XCirculateRequestEvent-place (fixnum fixnum) ( void "set_XCirculateRequestEvent_place" ))
(defentry XCirculateRequestEvent-window (fixnum) ( fixnum "XCirculateRequestEvent_window" ))
(defentry set-XCirculateRequestEvent-window (fixnum fixnum) ( void "set_XCirculateRequestEvent_window" ))
(defentry XCirculateRequestEvent-parent (fixnum) ( fixnum "XCirculateRequestEvent_parent" ))
(defentry set-XCirculateRequestEvent-parent (fixnum fixnum) ( void "set_XCirculateRequestEvent_parent" ))
(defentry XCirculateRequestEvent-display (fixnum) ( fixnum "XCirculateRequestEvent_display" ))
(defentry set-XCirculateRequestEvent-display (fixnum fixnum) ( void "set_XCirculateRequestEvent_display" ))
(defentry XCirculateRequestEvent-send_event (fixnum) ( fixnum "XCirculateRequestEvent_send_event" ))
(defentry set-XCirculateRequestEvent-send_event (fixnum fixnum) ( void "set_XCirculateRequestEvent_send_event" ))
(defentry XCirculateRequestEvent-serial (fixnum) ( fixnum "XCirculateRequestEvent_serial" ))
(defentry set-XCirculateRequestEvent-serial (fixnum fixnum) ( void "set_XCirculateRequestEvent_serial" ))
(defentry XCirculateRequestEvent-type (fixnum) ( fixnum "XCirculateRequestEvent_type" ))
(defentry set-XCirculateRequestEvent-type (fixnum fixnum) ( void "set_XCirculateRequestEvent_type" ))


;;;;;; XPropertyEvent funcions ;;;;;;

(defentry make-XPropertyEvent () ( fixnum  "make_XPropertyEvent" ))
(defentry XPropertyEvent-state (fixnum) ( fixnum "XPropertyEvent_state" ))
(defentry set-XPropertyEvent-state (fixnum fixnum) ( void "set_XPropertyEvent_state" ))
(defentry XPropertyEvent-time (fixnum) ( fixnum "XPropertyEvent_time" ))
(defentry set-XPropertyEvent-time (fixnum fixnum) ( void "set_XPropertyEvent_time" ))
(defentry XPropertyEvent-atom (fixnum) ( fixnum "XPropertyEvent_atom" ))
(defentry set-XPropertyEvent-atom (fixnum fixnum) ( void "set_XPropertyEvent_atom" ))
(defentry XPropertyEvent-window (fixnum) ( fixnum "XPropertyEvent_window" ))
(defentry set-XPropertyEvent-window (fixnum fixnum) ( void "set_XPropertyEvent_window" ))
(defentry XPropertyEvent-display (fixnum) ( fixnum "XPropertyEvent_display" ))
(defentry set-XPropertyEvent-display (fixnum fixnum) ( void "set_XPropertyEvent_display" ))
(defentry XPropertyEvent-send_event (fixnum) ( fixnum "XPropertyEvent_send_event" ))
(defentry set-XPropertyEvent-send_event (fixnum fixnum) ( void "set_XPropertyEvent_send_event" ))
(defentry XPropertyEvent-serial (fixnum) ( fixnum "XPropertyEvent_serial" ))
(defentry set-XPropertyEvent-serial (fixnum fixnum) ( void "set_XPropertyEvent_serial" ))
(defentry XPropertyEvent-type (fixnum) ( fixnum "XPropertyEvent_type" ))
(defentry set-XPropertyEvent-type (fixnum fixnum) ( void "set_XPropertyEvent_type" ))


;;;;;; XSelectionClearEvent funcions ;;;;;;

(defentry make-XSelectionClearEvent () ( fixnum  "make_XSelectionClearEvent" ))
(defentry XSelectionClearEvent-time (fixnum) ( fixnum "XSelectionClearEvent_time" ))
(defentry set-XSelectionClearEvent-time (fixnum fixnum) ( void "set_XSelectionClearEvent_time" ))
(defentry XSelectionClearEvent-selection (fixnum) ( fixnum "XSelectionClearEvent_selection" ))
(defentry set-XSelectionClearEvent-selection (fixnum fixnum) ( void "set_XSelectionClearEvent_selection" ))
(defentry XSelectionClearEvent-window (fixnum) ( fixnum "XSelectionClearEvent_window" ))
(defentry set-XSelectionClearEvent-window (fixnum fixnum) ( void "set_XSelectionClearEvent_window" ))
(defentry XSelectionClearEvent-display (fixnum) ( fixnum "XSelectionClearEvent_display" ))
(defentry set-XSelectionClearEvent-display (fixnum fixnum) ( void "set_XSelectionClearEvent_display" ))
(defentry XSelectionClearEvent-send_event (fixnum) ( fixnum "XSelectionClearEvent_send_event" ))
(defentry set-XSelectionClearEvent-send_event (fixnum fixnum) ( void "set_XSelectionClearEvent_send_event" ))
(defentry XSelectionClearEvent-serial (fixnum) ( fixnum "XSelectionClearEvent_serial" ))
(defentry set-XSelectionClearEvent-serial (fixnum fixnum) ( void "set_XSelectionClearEvent_serial" ))
(defentry XSelectionClearEvent-type (fixnum) ( fixnum "XSelectionClearEvent_type" ))
(defentry set-XSelectionClearEvent-type (fixnum fixnum) ( void "set_XSelectionClearEvent_type" ))


;;;;;; XSelectionRequestEvent funcions ;;;;;;

(defentry make-XSelectionRequestEvent () ( fixnum  "make_XSelectionRequestEvent" ))
(defentry XSelectionRequestEvent-time (fixnum) ( fixnum "XSelectionRequestEvent_time" ))
(defentry set-XSelectionRequestEvent-time (fixnum fixnum) ( void "set_XSelectionRequestEvent_time" ))
(defentry XSelectionRequestEvent-property (fixnum) ( fixnum "XSelectionRequestEvent_property" ))
(defentry set-XSelectionRequestEvent-property (fixnum fixnum) ( void "set_XSelectionRequestEvent_property" ))
(defentry XSelectionRequestEvent-target (fixnum) ( fixnum "XSelectionRequestEvent_target" ))
(defentry set-XSelectionRequestEvent-target (fixnum fixnum) ( void "set_XSelectionRequestEvent_target" ))
(defentry XSelectionRequestEvent-selection (fixnum) ( fixnum "XSelectionRequestEvent_selection" ))
(defentry set-XSelectionRequestEvent-selection (fixnum fixnum) ( void "set_XSelectionRequestEvent_selection" ))
(defentry XSelectionRequestEvent-requestor (fixnum) ( fixnum "XSelectionRequestEvent_requestor" ))
(defentry set-XSelectionRequestEvent-requestor (fixnum fixnum) ( void "set_XSelectionRequestEvent_requestor" ))
(defentry XSelectionRequestEvent-owner (fixnum) ( fixnum "XSelectionRequestEvent_owner" ))
(defentry set-XSelectionRequestEvent-owner (fixnum fixnum) ( void "set_XSelectionRequestEvent_owner" ))
(defentry XSelectionRequestEvent-display (fixnum) ( fixnum "XSelectionRequestEvent_display" ))
(defentry set-XSelectionRequestEvent-display (fixnum fixnum) ( void "set_XSelectionRequestEvent_display" ))
(defentry XSelectionRequestEvent-send_event (fixnum) ( fixnum "XSelectionRequestEvent_send_event" ))
(defentry set-XSelectionRequestEvent-send_event (fixnum fixnum) ( void "set_XSelectionRequestEvent_send_event" ))
(defentry XSelectionRequestEvent-serial (fixnum) ( fixnum "XSelectionRequestEvent_serial" ))
(defentry set-XSelectionRequestEvent-serial (fixnum fixnum) ( void "set_XSelectionRequestEvent_serial" ))
(defentry XSelectionRequestEvent-type (fixnum) ( fixnum "XSelectionRequestEvent_type" ))
(defentry set-XSelectionRequestEvent-type (fixnum fixnum) ( void "set_XSelectionRequestEvent_type" ))


;;;;;; XSelectionEvent funcions ;;;;;;

(defentry make-XSelectionEvent () ( fixnum  "make_XSelectionEvent" ))
(defentry XSelectionEvent-time (fixnum) ( fixnum "XSelectionEvent_time" ))
(defentry set-XSelectionEvent-time (fixnum fixnum) ( void "set_XSelectionEvent_time" ))
(defentry XSelectionEvent-property (fixnum) ( fixnum "XSelectionEvent_property" ))
(defentry set-XSelectionEvent-property (fixnum fixnum) ( void "set_XSelectionEvent_property" ))
(defentry XSelectionEvent-target (fixnum) ( fixnum "XSelectionEvent_target" ))
(defentry set-XSelectionEvent-target (fixnum fixnum) ( void "set_XSelectionEvent_target" ))
(defentry XSelectionEvent-selection (fixnum) ( fixnum "XSelectionEvent_selection" ))
(defentry set-XSelectionEvent-selection (fixnum fixnum) ( void "set_XSelectionEvent_selection" ))
(defentry XSelectionEvent-requestor (fixnum) ( fixnum "XSelectionEvent_requestor" ))
(defentry set-XSelectionEvent-requestor (fixnum fixnum) ( void "set_XSelectionEvent_requestor" ))
(defentry XSelectionEvent-display (fixnum) ( fixnum "XSelectionEvent_display" ))
(defentry set-XSelectionEvent-display (fixnum fixnum) ( void "set_XSelectionEvent_display" ))
(defentry XSelectionEvent-send_event (fixnum) ( fixnum "XSelectionEvent_send_event" ))
(defentry set-XSelectionEvent-send_event (fixnum fixnum) ( void "set_XSelectionEvent_send_event" ))
(defentry XSelectionEvent-serial (fixnum) ( fixnum "XSelectionEvent_serial" ))
(defentry set-XSelectionEvent-serial (fixnum fixnum) ( void "set_XSelectionEvent_serial" ))
(defentry XSelectionEvent-type (fixnum) ( fixnum "XSelectionEvent_type" ))
(defentry set-XSelectionEvent-type (fixnum fixnum) ( void "set_XSelectionEvent_type" ))


;;;;;; XColormapEvent funcions ;;;;;;

(defentry make-XColormapEvent () ( fixnum  "make_XColormapEvent" ))
(defentry XColormapEvent-state (fixnum) ( fixnum "XColormapEvent_state" ))
(defentry set-XColormapEvent-state (fixnum fixnum) ( void "set_XColormapEvent_state" ))
(defentry XColormapEvent-new (fixnum) ( fixnum "XColormapEvent_new" ))
(defentry set-XColormapEvent-new (fixnum fixnum) ( void "set_XColormapEvent_new" ))
(defentry XColormapEvent-colormap (fixnum) ( fixnum "XColormapEvent_colormap" ))
(defentry set-XColormapEvent-colormap (fixnum fixnum) ( void "set_XColormapEvent_colormap" ))
(defentry XColormapEvent-window (fixnum) ( fixnum "XColormapEvent_window" ))
(defentry set-XColormapEvent-window (fixnum fixnum) ( void "set_XColormapEvent_window" ))
(defentry XColormapEvent-display (fixnum) ( fixnum "XColormapEvent_display" ))
(defentry set-XColormapEvent-display (fixnum fixnum) ( void "set_XColormapEvent_display" ))
(defentry XColormapEvent-send_event (fixnum) ( fixnum "XColormapEvent_send_event" ))
(defentry set-XColormapEvent-send_event (fixnum fixnum) ( void "set_XColormapEvent_send_event" ))
(defentry XColormapEvent-serial (fixnum) ( fixnum "XColormapEvent_serial" ))
(defentry set-XColormapEvent-serial (fixnum fixnum) ( void "set_XColormapEvent_serial" ))
(defentry XColormapEvent-type (fixnum) ( fixnum "XColormapEvent_type" ))
(defentry set-XColormapEvent-type (fixnum fixnum) ( void "set_XColormapEvent_type" ))


;;;;;; XClientMessageEvent funcions ;;;;;;

(defentry make-XClientMessageEvent () ( fixnum  "make_XClientMessageEvent" ))
(defentry XClientMessageEvent-format (fixnum) ( fixnum "XClientMessageEvent_format" ))
(defentry set-XClientMessageEvent-format (fixnum fixnum) ( void "set_XClientMessageEvent_format" ))
(defentry XClientMessageEvent-message_type (fixnum) ( fixnum "XClientMessageEvent_message_type" ))
(defentry set-XClientMessageEvent-message_type (fixnum fixnum) ( void "set_XClientMessageEvent_message_type" ))
(defentry XClientMessageEvent-window (fixnum) ( fixnum "XClientMessageEvent_window" ))
(defentry set-XClientMessageEvent-window (fixnum fixnum) ( void "set_XClientMessageEvent_window" ))
(defentry XClientMessageEvent-display (fixnum) ( fixnum "XClientMessageEvent_display" ))
(defentry set-XClientMessageEvent-display (fixnum fixnum) ( void "set_XClientMessageEvent_display" ))
(defentry XClientMessageEvent-send_event (fixnum) ( fixnum "XClientMessageEvent_send_event" ))
(defentry set-XClientMessageEvent-send_event (fixnum fixnum) ( void "set_XClientMessageEvent_send_event" ))
(defentry XClientMessageEvent-serial (fixnum) ( fixnum "XClientMessageEvent_serial" ))
(defentry set-XClientMessageEvent-serial (fixnum fixnum) ( void "set_XClientMessageEvent_serial" ))
(defentry XClientMessageEvent-type (fixnum) ( fixnum "XClientMessageEvent_type" ))
(defentry set-XClientMessageEvent-type (fixnum fixnum) ( void "set_XClientMessageEvent_type" ))


;;;;;; XMappingEvent funcions ;;;;;;

(defentry make-XMappingEvent () ( fixnum  "make_XMappingEvent" ))
(defentry XMappingEvent-count (fixnum) ( fixnum "XMappingEvent_count" ))
(defentry set-XMappingEvent-count (fixnum fixnum) ( void "set_XMappingEvent_count" ))
(defentry XMappingEvent-first_keycode (fixnum) ( fixnum "XMappingEvent_first_keycode" ))
(defentry set-XMappingEvent-first_keycode (fixnum fixnum) ( void "set_XMappingEvent_first_keycode" ))
(defentry XMappingEvent-request (fixnum) ( fixnum "XMappingEvent_request" ))
(defentry set-XMappingEvent-request (fixnum fixnum) ( void "set_XMappingEvent_request" ))
(defentry XMappingEvent-window (fixnum) ( fixnum "XMappingEvent_window" ))
(defentry set-XMappingEvent-window (fixnum fixnum) ( void "set_XMappingEvent_window" ))
(defentry XMappingEvent-display (fixnum) ( fixnum "XMappingEvent_display" ))
(defentry set-XMappingEvent-display (fixnum fixnum) ( void "set_XMappingEvent_display" ))
(defentry XMappingEvent-send_event (fixnum) ( fixnum "XMappingEvent_send_event" ))
(defentry set-XMappingEvent-send_event (fixnum fixnum) ( void "set_XMappingEvent_send_event" ))
(defentry XMappingEvent-serial (fixnum) ( fixnum "XMappingEvent_serial" ))
(defentry set-XMappingEvent-serial (fixnum fixnum) ( void "set_XMappingEvent_serial" ))
(defentry XMappingEvent-type (fixnum) ( fixnum "XMappingEvent_type" ))
(defentry set-XMappingEvent-type (fixnum fixnum) ( void "set_XMappingEvent_type" ))


;;;;;; XErrorEvent funcions ;;;;;;

(defentry make-XErrorEvent () ( fixnum  "make_XErrorEvent" ))
(defentry XErrorEvent-minor_code (fixnum) ( char "XErrorEvent_minor_code" ))
(defentry set-XErrorEvent-minor_code (fixnum char) ( void "set_XErrorEvent_minor_code" ))
(defentry XErrorEvent-request_code (fixnum) ( char "XErrorEvent_request_code" ))
(defentry set-XErrorEvent-request_code (fixnum char) ( void "set_XErrorEvent_request_code" ))
(defentry XErrorEvent-error_code (fixnum) ( char "XErrorEvent_error_code" ))
(defentry set-XErrorEvent-error_code (fixnum char) ( void "set_XErrorEvent_error_code" ))
(defentry XErrorEvent-serial (fixnum) ( fixnum "XErrorEvent_serial" ))
(defentry set-XErrorEvent-serial (fixnum fixnum) ( void "set_XErrorEvent_serial" ))
(defentry XErrorEvent-resourceid (fixnum) ( fixnum "XErrorEvent_resourceid" ))
(defentry set-XErrorEvent-resourceid (fixnum fixnum) ( void "set_XErrorEvent_resourceid" ))
(defentry XErrorEvent-display (fixnum) ( fixnum "XErrorEvent_display" ))
(defentry set-XErrorEvent-display (fixnum fixnum) ( void "set_XErrorEvent_display" ))
(defentry XErrorEvent-type (fixnum) ( fixnum "XErrorEvent_type" ))
(defentry set-XErrorEvent-type (fixnum fixnum) ( void "set_XErrorEvent_type" ))


;;;;;; XAnyEvent funcions ;;;;;;

(defentry make-XAnyEvent () ( fixnum  "make_XAnyEvent" ))
(defentry XAnyEvent-window (fixnum) ( fixnum "XAnyEvent_window" ))
(defentry set-XAnyEvent-window (fixnum fixnum) ( void "set_XAnyEvent_window" ))
(defentry XAnyEvent-display (fixnum) ( fixnum "XAnyEvent_display" ))
(defentry set-XAnyEvent-display (fixnum fixnum) ( void "set_XAnyEvent_display" ))
(defentry XAnyEvent-send_event (fixnum) ( fixnum "XAnyEvent_send_event" ))
(defentry set-XAnyEvent-send_event (fixnum fixnum) ( void "set_XAnyEvent_send_event" ))
(defentry XAnyEvent-serial (fixnum) ( fixnum "XAnyEvent_serial" ))
(defentry set-XAnyEvent-serial (fixnum fixnum) ( void "set_XAnyEvent_serial" ))
(defentry XAnyEvent-type (fixnum) ( fixnum "XAnyEvent_type" ))
(defentry set-XAnyEvent-type (fixnum fixnum) ( void "set_XAnyEvent_type" ))


;;;;;; XEvent funcions ;;;;;;

(defentry make-XEvent () ( fixnum  "make_XEvent" ))
;;(defentry XEvent-pad[24] (fixnum) ( fixnum "XEvent_pad[24]" ))
;;(defentry set-XEvent-pad[24] (fixnum fixnum) ( void "set_XEvent_pad[24]" ))
;;(defentry XEvent-xkeymap (fixnum) ( XKeymapEvent "XEvent_xkeymap" ))
;;(defentry set-XEvent-xkeymap (fixnum XKeymapEvent) ( void "set_XEvent_xkeymap" ))
;;(defentry XEvent-xerror (fixnum) ( XErrorEvent "XEvent_xerror" ))
;;(defentry set-XEvent-xerror (fixnum XErrorEvent) ( void "set_XEvent_xerror" ))
;;(defentry XEvent-xmapping (fixnum) ( XMappingEvent "XEvent_xmapping" ))
;;(defentry set-XEvent-xmapping (fixnum XMappingEvent) ( void "set_XEvent_xmapping" ))
;;(defentry XEvent-xclient (fixnum) ( XClientMessageEvent "XEvent_xclient" ))
;;(defentry set-XEvent-xclient (fixnum XClientMessageEvent) ( void "set_XEvent_xclient" ))
;;(defentry XEvent-xcolormap (fixnum) ( XColormapEvent "XEvent_xcolormap" ))
;;(defentry set-XEvent-xcolormap (fixnum XColormapEvent) ( void "set_XEvent_xcolormap" ))
;;(defentry XEvent-xselection (fixnum) ( XSelectionEvent "XEvent_xselection" ))
;;(defentry set-XEvent-xselection (fixnum XSelectionEvent) ( void "set_XEvent_xselection" ))
;;(defentry XEvent-xselectionrequest (fixnum) ( XSelectionRequestEvent "XEvent_xselectionrequest" ))
;;(defentry set-XEvent-xselectionrequest (fixnum XSelectionRequestEvent) ( void "set_XEvent_xselectionrequest" ))
;;(defentry XEvent-xselectionclear (fixnum) ( XSelectionClearEvent "XEvent_xselectionclear" ))
;;(defentry set-XEvent-xselectionclear (fixnum XSelectionClearEvent) ( void "set_XEvent_xselectionclear" ))
;;(defentry XEvent-xproperty (fixnum) ( XPropertyEvent "XEvent_xproperty" ))
;;(defentry set-XEvent-xproperty (fixnum XPropertyEvent) ( void "set_XEvent_xproperty" ))
;;(defentry XEvent-xcirculaterequest (fixnum) ( XCirculateRequestEvent "XEvent_xcirculaterequest" ))
;;(defentry set-XEvent-xcirculaterequest (fixnum XCirculateRequestEvent) ( void "set_XEvent_xcirculaterequest" ))
;;(defentry XEvent-xcirculate (fixnum) ( XCirculateEvent "XEvent_xcirculate" ))
;;(defentry set-XEvent-xcirculate (fixnum XCirculateEvent) ( void "set_XEvent_xcirculate" ))
;;(defentry XEvent-xconfigurerequest (fixnum) ( XConfigureRequestEvent "XEvent_xconfigurerequest" ))
;;(defentry set-XEvent-xconfigurerequest (fixnum XConfigureRequestEvent) ( void "set_XEvent_xconfigurerequest" ))
;;(defentry XEvent-xresizerequest (fixnum) ( XResizeRequestEvent "XEvent_xresizerequest" ))
;;(defentry set-XEvent-xresizerequest (fixnum XResizeRequestEvent) ( void "set_XEvent_xresizerequest" ))
;;(defentry XEvent-xgravity (fixnum) ( XGravityEvent "XEvent_xgravity" ))
;;(defentry set-XEvent-xgravity (fixnum XGravityEvent) ( void "set_XEvent_xgravity" ))
;;(defentry XEvent-xconfigure (fixnum) ( XConfigureEvent "XEvent_xconfigure" ))
;;(defentry set-XEvent-xconfigure (fixnum XConfigureEvent) ( void "set_XEvent_xconfigure" ))
;;(defentry XEvent-xreparent (fixnum) ( XReparentEvent "XEvent_xreparent" ))
;;(defentry set-XEvent-xreparent (fixnum XReparentEvent) ( void "set_XEvent_xreparent" ))
;;(defentry XEvent-xmaprequest (fixnum) ( XMapRequestEvent "XEvent_xmaprequest" ))
;;(defentry set-XEvent-xmaprequest (fixnum XMapRequestEvent) ( void "set_XEvent_xmaprequest" ))
;;(defentry XEvent-xmap (fixnum) ( XMapEvent "XEvent_xmap" ))
;;(defentry set-XEvent-xmap (fixnum XMapEvent) ( void "set_XEvent_xmap" ))
;;(defentry XEvent-xunmap (fixnum) ( XUnmapEvent "XEvent_xunmap" ))
;;(defentry set-XEvent-xunmap (fixnum XUnmapEvent) ( void "set_XEvent_xunmap" ))
;;(defentry XEvent-xdestroywindow (fixnum) ( XDestroyWindowEvent "XEvent_xdestroywindow" ))
;;(defentry set-XEvent-xdestroywindow (fixnum XDestroyWindowEvent) ( void "set_XEvent_xdestroywindow" ))
;;(defentry XEvent-xcreatewindow (fixnum) ( XCreateWindowEvent "XEvent_xcreatewindow" ))
;;(defentry set-XEvent-xcreatewindow (fixnum XCreateWindowEvent) ( void "set_XEvent_xcreatewindow" ))
;;(defentry XEvent-xvisibility (fixnum) ( XVisibilityEvent "XEvent_xvisibility" ))
;;(defentry set-XEvent-xvisibility (fixnum XVisibilityEvent) ( void "set_XEvent_xvisibility" ))
;;(defentry XEvent-xnoexpose (fixnum) ( XNoExposeEvent "XEvent_xnoexpose" ))
;;(defentry set-XEvent-xnoexpose (fixnum XNoExposeEvent) ( void "set_XEvent_xnoexpose" ))
;;(defentry XEvent-xgraphicsexpose (fixnum) ( XGraphicsExposeEvent "XEvent_xgraphicsexpose" ))
;;(defentry set-XEvent-xgraphicsexpose (fixnum XGraphicsExposeEvent) ( void "set_XEvent_xgraphicsexpose" ))
;;(defentry XEvent-xexpose (fixnum) ( XExposeEvent "XEvent_xexpose" ))
;;(defentry set-XEvent-xexpose (fixnum XExposeEvent) ( void "set_XEvent_xexpose" ))
;;(defentry XEvent-xfocus (fixnum) ( XFocusChangeEvent "XEvent_xfocus" ))
;;(defentry set-XEvent-xfocus (fixnum XFocusChangeEvent) ( void "set_XEvent_xfocus" ))
;;(defentry XEvent-xcrossing (fixnum) ( XCrossingEvent "XEvent_xcrossing" ))
;;(defentry set-XEvent-xcrossing (fixnum XCrossingEvent) ( void "set_XEvent_xcrossing" ))
;;(defentry XEvent-xmotion (fixnum) ( XMotionEvent "XEvent_xmotion" ))
;;(defentry set-XEvent-xmotion (fixnum XMotionEvent) ( void "set_XEvent_xmotion" ))
;;(defentry XEvent-xbutton (fixnum) ( XButtonEvent "XEvent_xbutton" ))
;;(defentry set-XEvent-xbutton (fixnum XButtonEvent) ( void "set_XEvent_xbutton" ))
;;(defentry XEvent-xkey (fixnum) ( XKeyEvent "XEvent_xkey" ))
;;(defentry set-XEvent-xkey (fixnum XKeyEvent) ( void "set_XEvent_xkey" ))
;;(defentry XEvent-xany (fixnum) ( XAnyEvent "XEvent_xany" ))
;;(defentry set-XEvent-xany (fixnum XAnyEvent) ( void "set_XEvent_xany" ))
;;(defentry XEvent-type (fixnum) ( fixnum "XEvent_type" ))
;;(defentry set-XEvent-type (fixnum fixnum) ( void "set_XEvent_type" ))


