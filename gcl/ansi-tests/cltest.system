;-*- Mode:     Lisp -*-
;;;; Author:   Paul Dietz
;;;; Created:  Fri Mar 27 09:57:28 1998
;;;; Contains: MK portable system file for CL test suite

;;; NOTE!! This file is not being maintained right now.
;;; To run the test suite, load "gclload.lsp"

(mk::defsystem "cltest"
  :source-pathname #.(directory-namestring *LOAD-TRUENAME*)
  :source-extension "lsp"
  :binary-pathname #.(mk::append-directories
	(directory-namestring *LOAD-TRUENAME*)
	"binary/")
  :binary-extension
	#+CMU  #.(C::BACKEND-FASL-FILE-TYPE C::*TARGET-BACKEND*)
	#+ALLEGRO "fasl"
	#+(OR AKCL GCL) "o"
        #+CLISP "fas"
        #-(OR CMU ALLEGRO AKCL GCL CLISP)
        #.(pathname-type (compile-file-pathname "foo.lisp"))
  :initially-do (progn (load "rt/rt.system")
		       (mk::compile-system "rt"))
  :components
  ("cl-test-package"
   (:subsystem "cl-test-code"
    :source-pathname ""
    :binary-pathname ""
    :depends-on ("cl-test-package")
    :components
    (
     "ansi-aux"
     "universe"
     "cons-test-01"
     "cons-test-02"
     "cons-test-03"
     "cons-test-04"
     "cons-test-05"
     "cons-test-06"
     "cons-test-07"
     "cons-test-08"
     "cons-test-09"
     "cons-test-10"
     "cons-test-11"
     "cons-test-12"
     "cons-test-13"
     "cons-test-14"
     "cons-test-15"
     "cons-test-16"
     "cons-test-17"
     "cons-test-18"
     "cons-test-19"
     "cons-test-20"
     "cons-test-21"
     "cons-test-22"
     "cons-test-23"
     "cons-test-24"
     "types-and-class"
     "cl-symbols"
     "cases-14-1-arrays"
     "cases-14-1-list"
     "reader-test"
     
     "packages-00"
     "packages-01"
     "packages-02"
     "packages-03"
     "packages-04"
     "packages-05"
     "packages-06"
     "packages-07"
     "packages-08"
     "packages-09"
     "packages-10"
     "packages-11"
     "packages-12"
     "packages-13"
     "packages-14"
     "packages-15"
     "packages-16"
     "packages-17"
     "packages-18"

     "fill-strings"
     "make-sequence"
     "map"
     "map-into"
     "reduce"
     "count"
     "count-if"
     "count-if-not"
     "reverse"
     "nreverse"
     "sort"
     "find"
     "find-if"
     "find-if-not"
     "position"
     "search-aux"
     "search-list"
     "search-vector"
     "search-bitvector"
     "search-string"
     "mismatch"
     "replace"
     "substitute"
     "substitute-if"
     "substitute-if-not"
     "nsubstitute"
     "nsubstitute-if"
     "nsubstitute-if-not"
     "concatenate"
     "merge"
     "remove"  ;; need to extend these tests

     "structure-00"
     "structures-01"
     "structures-02"

     ))))

     
   
